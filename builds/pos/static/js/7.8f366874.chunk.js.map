{"version":3,"sources":["@jumbo/components/Common/formElements/AppDatePicker.js","routes/Pages/Reports/Table/UserListRow/index.js","routes/Pages/Reports/Table/UserTableHead/index.js","routes/Pages/Reports/Table/UserTableToolbar/index.style.js","routes/Pages/Reports/Table/UserTableToolbar/index.js","routes/Pages/Reports/Table/index.style.js","routes/Pages/Reports/Table/UserDetailView/index.style.js","routes/Pages/Reports/Table/UserDetailView/index.js","routes/Pages/Reports/Table/NoRecordFound.js","routes/Pages/Reports/Table/index.js","routes/Pages/Reports/ProjectWorkedHours/index.js"],"names":["AppDatePicker","name","id","fullWidth","size","value","onChange","helperText","variant","format","inputVariant","error","rest","KeyboardButtonProps","className","prototype","PropTypes","string","bool","func","defaultProps","useStyles","makeStyles","theme","titleRoot","marginBottom","fontSize","letterSpacing","color","palette","common","dark","React","memo","row","isSelected","classes","onRowClick","onUserEdit","onUserDelete","onUserView","dispatch","useDispatch","handleClick","val","type","UPDATE_CART","payload","cart_items","order_items","SET_ACTIVE_OPTION","SET_ACTION","isPaid","SET_DRAWER_OPEN","labelId","isItemSelected","TableRow","hover","onClick","event","role","aria-checked","tabIndex","key","selected","TableCell","padding","component","scope","Box","display","alignItems","Typography","String","order_no","toUpperCase","order_status","toLowerCase","Number","amount_due","toFixed","recordedAt","align","stopPropagation","IconButton","headCells","numeric","disablePadding","label","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","TableHead","map","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","root","paddingLeft","spacing","paddingRight","highlight","secondary","main","backgroundColor","alpha","light","text","primary","title","flex","chipsRoot","justifyContent","marginLeft","marginRight","margin","setSelected","searchTerm","onUserAdd","filterOptions","setFilterOptions","setSearchTerm","project","handleSearch","useState","openConfirmDialog","setOpenConfirmDialog","length","Fragment","Toolbar","clsx","width","Button","alert","AddCircle","CmtSearch","e","target","border","onlyIcon","Tooltip","aria-label","ConfirmDialog","open","content","onClose","onConfirm","deleteBulkUsers","paper","lighten","background","container","maxHeight","table","minWidth","clip","height","overflow","position","top","dialogRoot","userInfoRoot","borderBottom","borderColor","flexDirection","breakpoints","up","avatarView","down","fontWeight","typography","fontWeightBold","subTitleRoot","labelRoot","disabled","borderRadius","textTransform","UserDetailView","currentUser","onCloseDialog","email","phones","status","dpUrl","company","designation","starred","Dialog","mr","xs","md","CmtAvatar","src","alt","mt","ml","Checkbox","icon","checkedIcon","style","checked","px","py","mb","sm","CmtList","data","renderRow","item","index","phone","isRequired","emptyTitle","NoRecordFound","children","lg","CmtImage","UsersModule","startDate","endDate","users","useSelector","state","usersReducer","uiReducer","userDialog","orderApp","orders","filterType","unpaidOrders","count","setOrderBy","setOrder","setPage","rowsPerPage","setRowsPerPage","openViewDialog","setOpenViewDialog","selectedUser","setSelectedUser","usersFetched","setUsersFetched","isFilterApplied","setFilterApplied","setCurrent","debouncedSearchTerm","useDebounce","useEffect","getUsers","handleRowClick","selectedIndex","indexOf","newSelected","concat","slice","handleUserView","user","setCurrentUser","handleUserEdit","SET_USER_DIALOG","handleUserDelete","getOrders","page","Paper","preventDefault","setFilterType","searchText","TableContainer","Table","stickyHeader","aria-labelledby","n","isAsc","TableBody","stableSort","getComparator","colSpan","rowSpan","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","deleteUser","headerItem","white","borderLeft","backdropContent","borderBottomColor","subHeaderBottom","breadcrumbs","link","ProjectSwitcher","currentProject","setCurrentProject","setStartDate","setEndDate","console","log","classicWidget","CmtCardContent","AppSelectBox","projects","valueKey","labelKey","find","date","ProjectHeader","revealed","mx","getFormattedDate","ProjectWorkedHours","setRevealed","PageContainer","heading","GridContainer","Grid","CmtBackDrop","concealedIcon","extrasContainer","backLayerConcealed","backLayerRevealed","onRevealed","p"],"mappings":"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","file":"static/js/7.8f366874.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nconst AppDatePicker = ({\r\n  name,\r\n  id,\r\n  fullWidth,\r\n  size,\r\n  value,\r\n  onChange,\r\n  helperText,\r\n  variant,\r\n  format,\r\n  inputVariant,\r\n  error,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <KeyboardDatePicker\r\n      variant={variant}\r\n      inputVariant={inputVariant}\r\n      format={format}\r\n      name={name}\r\n      id={id || name}\r\n      fullWidth={fullWidth}\r\n      size={size}\r\n      value={value}\r\n      onChange={onChange}\r\n      helperText={helperText}\r\n      error={error || helperText !== ''}\r\n      KeyboardButtonProps={{\r\n        'aria-label': 'change date',\r\n      }}\r\n      {...rest}\r\n      className=\"form-control\"\r\n    />\r\n  );\r\n};\r\n\r\nAppDatePicker.prototype = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  fullWidth: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  format: PropTypes.string,\r\n  inputVariant: PropTypes.string,\r\n  size: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  helperText: PropTypes.bool,\r\n};\r\n\r\nAppDatePicker.defaultProps = {\r\n  fullWidth: true,\r\n  variant: 'dialog',\r\n  inputVariant: 'standard',\r\n  format: 'YYYY-MM-DD',\r\n  size: 'small',\r\n  error: false,\r\n  helperText: '',\r\n};\r\n\r\nexport default AppDatePicker;\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { timeFromNow } from '../../../../../@jumbo/utils/dateHelper';\r\nimport { Block, CheckCircleOutline, Delete, Edit, MoreHoriz, Visibility } from '@material-ui/icons';\r\nimport CmtDropdownMenu from '../../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { Box, IconButton, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { sentMailToUser, updateUserStatus } from '../../../../../redux/actions/Users';\r\n\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { SET_ACTION, SET_ACTIVE_OPTION, SET_DRAWER_OPEN, UPDATE_CART } from 'redux/actions/types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  titleRoot: {\r\n    marginBottom: 2,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    color: theme.palette.common.dark,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst UserListRow = ({ row, isSelected, onRowClick, onUserEdit, onUserDelete, onUserView }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const getUserActions = user => {\r\n    const actions = [\r\n      { action: 'view', label: 'View', icon: <Visibility /> },\r\n      { action: 'edit', label: 'Edit', icon: <Edit /> },\r\n      // { action: 'email', label: 'Email', icon: <Mail /> },\r\n    ];\r\n if(row.roles && !row.roles.find(a => a.name === 'super')){\r\n  if (user.status === 'suspended') {\r\n    actions.push({\r\n      action: 'activate',\r\n      label: 'Reactivate',\r\n      icon: <CheckCircleOutline />,\r\n    });\r\n  } else {\r\n    actions.push({ action: 'suspend', label: 'Suspend', icon: <Block /> });\r\n  }\r\n  actions.push({ action: 'delete', label: 'Delete', icon: <Delete /> });\r\n\r\n }\r\n   \r\n  \r\n    return actions;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleClick = (val) => {\r\n      dispatch({type: UPDATE_CART, payload: {...val, cart_items: val.order_items}}); \r\n      dispatch({type: SET_ACTIVE_OPTION, payload: 'cart'});\r\n      dispatch({type: SET_ACTION, payload: val.isPaid ? 'paidCart' : 'viewCart'});\r\n      dispatch({type: SET_DRAWER_OPEN, payload: true});\r\n  }\r\n\r\n\r\n\r\n  const labelId = `enhanced-table-checkbox-${row.id}`;\r\n  const isItemSelected = isSelected(row.id);\r\n  return (\r\n    <TableRow\r\n      hover\r\n      onClick={event => handleClick(row)}\r\n      role=\"checkbox\"\r\n      aria-checked={isItemSelected}\r\n      tabIndex={-1}\r\n      key={row.id}\r\n      selected={isItemSelected}>\r\n      <TableCell padding=\"checkbox\">\r\n    {/* <Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} /> */}\r\n      </TableCell>\r\n      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <div>\r\n            <Typography className={classes.titleRoot} component=\"div\" variant=\"h4\">\r\n              {String(row.order_no).toUpperCase()}\r\n            </Typography>\r\n\r\n            <Box color={row.isPaid ? 'success.main' :  String(row.order_status).toLowerCase() === 'unpaid' ? 'primary.main' : 'secondary.main' }>\r\n            <Typography component=\"span\" variant=\"h6\" \r\n            // color={(String(row.order_status).toLowerCase() === 'paid' || row.isPaid) ? 'primary' : String(row.order_status).toLowerCase() === 'unpaid' ? 'secondary' :  'textPrimary'}\r\n            \r\n            >\r\n            \r\n              {(String(row.order_status).toLowerCase() === 'paid' || row.isPaid) ? 'PAID' : String(row.order_status).toUpperCase()}\r\n            </Typography>\r\n            </Box>\r\n          </div>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell>₱{Number(row.amount_due).toFixed(2)}</TableCell>\r\n       <TableCell>\r\n        {row.recordedAt}\r\n      </TableCell> \r\n      {/* <TableCell>{timeFromNow(row.lastLoginAt)}</TableCell> */}\r\n      <TableCell align=\"center\" onClick={event => event.stopPropagation()}>\r\n        <IconButton onClick={() => handleClick(row)}>\r\n          <LaunchIcon color='primary'/>\r\n        </IconButton>\r\n  {/* <CmtDropdownMenu items={userActions} onItemClick={(e) => onUserMenuClick(e)} TriggerComponent={<MoreHoriz />} /> */}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default React.memo(UserListRow);\r\n","import TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'order_no',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Order #',\r\n  },\r\n  { id: 'amount_due', numeric: false, disablePadding: false, label: 'Total Amount' },\r\n  { id:   'recordedAt', numeric: false, disablePadding: false, label: 'Date' },\r\n  //  {\r\n  //   id: 'lastLoginAt',\r\n  //   numeric: false,\r\n  //   disablePadding: false,\r\n  //   label: 'Last Login',\r\n  // },\r\n];\r\n\r\nfunction UserTableHead({ classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort }) {\r\n  const onSortOrderChange = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          /> */}\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}>\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={onSortOrderChange(headCell.id)}>\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        {<TableCell align=\"center\">Actions</TableCell> }\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nUserTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default React.memo(UserTableHead);\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: alpha(theme.palette.secondary.light, 0.15),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n  chipsRoot: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginLeft: theme.spacing(0.5),\r\n    marginRight: theme.spacing(0.5),\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, Chip, Menu, MenuItem } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteBulkUsers } from '../../../../../redux/actions/Users';\r\nimport ConfirmDialog from '../../../../../@jumbo/components/Common/ConfirmDialog';\r\nimport CmtSearch from '../../../../../@coremat/CmtSearch';\r\nimport useStyles from './index.style';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { AddCircle } from '@material-ui/icons';\r\n\r\nconst filterOptionsList = [\r\n  { label: 'Active', value: 'active' },\r\n  { label: 'Suspended', value: 'suspended' },\r\n];\r\n\r\nconst UserTableToolbar = ({\r\n  selected,\r\n  setSelected,\r\n  onUserAdd,\r\n  filterOptions,\r\n  setFilterOptions,\r\n  searchTerm,\r\n  setSearchTerm,\r\n  project,\r\n  handleSearch\r\n}) => {\r\n  const classes = useStyles();\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const onDeleteCLick = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n    dispatch(deleteBulkUsers(selected, () => setSelected([])));\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  // const onFilterOptionClick = option => {\r\n  //   setFilterOptions(prevState => {\r\n  //     if (prevState.includes(option.value)) {\r\n  //       return prevState.filter(item => item !== option.value);\r\n  //     } else {\r\n  //       return [...prevState, option.value];\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  const onChipDelete = option => {\r\n    setFilterOptions(filterOptions.filter(item => item !== option.value));\r\n  };\r\n\r\n  const onSearchChipDelete = () => setSearchTerm('');\r\n\r\n  const numSelected = selected.length;\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}>\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => alert(`Add New ${project.label}`)}>\r\n             <AddCircle/>&nbsp;Add\r\n            </Button>\r\n          {/* {project.value === 'expenses' &&  */}\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\" width=\"100%\">\r\n          <CmtSearch onChange={e => setSearchTerm(e.target.value)} value={searchTerm} border={false} onlyIcon />\r\n          \r\n            </Box>\r\n            {/* } */}\r\n          </Box>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\" onClick={onDeleteCLick}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <React.Fragment>\r\n                {/* <Box component=\"form\" onSubmit={handleSearch} style={{display: 'flex'}}>\r\n            <CmtSearch onChange={e => setSearchTerm(e.target.value)} value={searchTerm} border={false} onlyIcon />\r\n            <div className={classes.chipsRoot}>\r\n              {searchTerm && <Chip label={searchTerm} onDelete={onSearchChipDelete} />}\r\n              {filterOptionsList.map(\r\n                (option, index) =>\r\n                  filterOptions.includes(option.value) && (\r\n                    <Chip key={index} label={option.label} onDelete={() => onChipDelete(option)} />\r\n                  ),\r\n              )}\r\n            </div>\r\n            </Box> */}\r\n\r\n            {/* <Tooltip title=\"Filter list\">\r\n              <IconButton aria-label=\"filter list\" onClick={handleClick}>\r\n                <FilterListIcon />\r\n              </IconButton>\r\n            </Tooltip> */}\r\n            {/* <Menu\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              anchorEl={anchorEl}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}>\r\n              {filterOptionsList.map((option, index) => (\r\n                <MenuItem key={index} onClick={() => onFilterOptionClick(option)}>\r\n                  <Checkbox\r\n                    checked={filterOptions.includes(option.value)}\r\n                    inputProps={{ 'aria-labelledby': option.label }}\r\n                  />\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu> */}\r\n          </React.Fragment>\r\n        )}\r\n      </Toolbar>\r\n\r\n      <ConfirmDialog\r\n        open={openConfirmDialog}\r\n        title={`Confirm delete users`}\r\n        content={'Are you sure, you want to  delete selected users?'}\r\n        onClose={handleCancelDelete}\r\n        onConfirm={handleConfirmDelete}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nUserTableToolbar.propTypes = {\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  filterOptions: PropTypes.array,\r\n  setFilterOptions: PropTypes.func,\r\n  searchTerm: PropTypes.string,\r\n  setSearchTerm: PropTypes.func,\r\n  onUserAdd: PropTypes.func,\r\n};\r\n\r\nexport default React.memo(UserTableToolbar);\r\n","import { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(4),\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  container: {\r\n    maxHeight: 415,\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialogRoot: {\r\n    position: 'relative',\r\n    '& .MuiDialog-paperWidthSm': {\r\n      width: '100%',\r\n    },\r\n  },\r\n  userInfoRoot: {\r\n    borderBottom: `1px solid ${theme.palette.borderColor.main}`,\r\n    padding: '20px 24px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  avatarView: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      '& .Cmt-avatar-size': {\r\n        width: 40,\r\n        height: 40,\r\n      },\r\n    },\r\n  },\r\n  titleRoot: {\r\n    fontSize: 16,\r\n    color: theme.palette.common.dark,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: 18,\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    letterSpacing: 0.4,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  labelRoot: {\r\n    backgroundColor: alpha(theme.palette.common.dark, 0.05),\r\n    color: theme.palette.text.disabled,\r\n    padding: '4px 10px',\r\n    borderRadius: 4,\r\n    textTransform: 'capitalize',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n// import { useSelector } from 'react-redux';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport useStyles from './index.style';\r\n\r\nconst UserDetailView = ({ currentUser, open, onCloseDialog }) => {\r\n  const classes = useStyles();\r\n\r\n  const { name, email, status, phones, company, designation, dpUrl, starred } = currentUser;\r\n  return (\r\n    <Dialog open={open} onClose={onCloseDialog} className={classes.dialogRoot}>\r\n      <Box className={classes.userInfoRoot}>\r\n        <Box mr={3} display=\"flex\" alignItems=\"center\">\r\n          <Box className={classes.avatarView} mr={{ xs: 4, md: 6 }}>\r\n            <CmtAvatar size={70} src={dpUrl} alt={name} />\r\n          </Box>\r\n\r\n          <Box mt={-2}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Typography className={classes.titleRoot}>{name}</Typography>\r\n              <Box ml={1}>\r\n                <Checkbox\r\n                  icon={<StarBorderIcon />}\r\n                  checkedIcon={<StarIcon style={{ color: '#FF8C00' }} />}\r\n                  checked={starred}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            \r\n          </Box>\r\n          <Box ml={1}>\r\n            <IconButton onClick={onCloseDialog}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box px={6} py={5}>\r\n        <Box mb={5} component=\"p\" color=\"common.dark\">\r\n          Contact Detail\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={{ xs: 4, sm: 7 }}>\r\n          <EmailIcon />\r\n          <Box ml={5} color=\"primary.main\" component=\"p\" className=\"pointer\">\r\n            {email}\r\n          </Box>\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={{ xs: 4, sm: 5 }}>\r\n          <PhoneIcon />\r\n          <Box ml={5}>\r\n            <CmtList\r\n              data={phones}\r\n              renderRow={(item, index) => (\r\n                <Box key={index} display=\"flex\" alignItems=\"center\">\r\n                  <Box color=\"text.secondary\">{item.phone}</Box>\r\n                  <Box ml={2} className={classes.labelRoot}>\r\n                    {item.label}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UserDetailView;\r\n\r\nUserDetailView.prototype = {\r\n  open: PropTypes.bool.isRequired,\r\n  onCloseDialog: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n  },\r\n  emptyTitle: {\r\n    fontSize: 16,\r\n    color: theme.palette.text.disabled,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NoRecordFound = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box mb={{ xs: 4, lg: 6 }}>\r\n        <CmtImage src={'/images/icons/search-contact.png'} alt=\"Empty contacts\" />\r\n      </Box>\r\n      <p className={classes.emptyTitle}>{children}</p>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NoRecordFound;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Paper, Table, TableCell, TableContainer, TableRow } from '@material-ui/core';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport UserListRow from './UserListRow';\r\nimport UserTableHead from './UserTableHead';\r\nimport UserTableToolbar from './UserTableToolbar';\r\nimport { getComparator, stableSort } from '../../../../@jumbo/utils/tableHelper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUser, getUsers, setCurrentUser } from '../../../../redux/actions/Users';\r\nimport ConfirmDialog from '../../../../@jumbo/components/Common/ConfirmDialog';\r\nimport { useDebounce } from '../../../../@jumbo/utils/commonHelper';\r\nimport useStyles from './index.style';\r\nimport UserDetailView from './UserDetailView';\r\nimport NoRecordFound from './NoRecordFound';\r\nimport { SET_USER_DIALOG } from 'redux/actions/types';\r\nimport { getOrders, setFilterType } from 'redux/actions/OrderApp';\r\n\r\nconst UsersModule = ({project, startDate, endDate}) => {\r\n  const classes = useStyles();\r\n  const { users } = useSelector((state) => state.usersReducer);\r\n  const { userDialog } = useSelector((state) => state.uiReducer);\r\n  const { orders, unpaidOrders, filterType, count } = useSelector(({orderApp}) => orderApp);\r\n\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({ name: '' });\r\n  const [usersFetched, setUsersFetched] = useState(false);\r\n  const [isFilterApplied, setFilterApplied] = useState(false);\r\n  const [filterOptions, setFilterOptions] = React.useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentUser, setCurrent] = useState({});\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getUsers(filterOptions, debouncedSearchTerm, () => {\r\n        setFilterApplied(!!filterOptions.length || !!debouncedSearchTerm);\r\n        setUsersFetched(true);\r\n      }),\r\n    );\r\n  }, [dispatch, filterOptions, debouncedSearchTerm]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrderBy(property);\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelected = users.map(n => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleRowClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n    dispatch(setFilterType({\r\n      ...filterType,\r\n      searchText: searchTerm,\r\n      page: newPage\r\n    }));\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n    dispatch(setFilterType({\r\n      ...filterType,\r\n      searchText: searchTerm,\r\n      page: 0,\r\n      rowsPerPage: parseInt(event.target.value, 10)\r\n    }));\r\n\r\n  };\r\n\r\n  const handleUserView = user => {\r\n    setCurrent(user)\r\n    dispatch(setCurrentUser(user));\r\n    setOpenViewDialog(true);\r\n  };\r\n\r\n  const handleCloseViewDialog = () => {\r\n    setOpenViewDialog(false);\r\n    dispatch(setCurrentUser(null));\r\n  };\r\n\r\n  const handleUserEdit = user => {\r\n    dispatch(setCurrentUser(user));\r\n    dispatch({type: SET_USER_DIALOG, payload: true})\r\n  };\r\n\r\n  const handleUserDelete = user => {\r\n    setSelectedUser(user);\r\n    setOpenConfirmDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n    dispatch(deleteUser(selectedUser.id));\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n  \r\n\r\n  const handleSearchTerm = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getOrders(filterType));\r\n    dispatch(setFilterType({\r\n      ...filterType,\r\n      searchText: searchTerm\r\n    }));\r\n\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders({\r\n      page: 0,\r\n      rowsPerPage: 10\r\n    }));\r\n  }, [filterType, startDate, endDate, project]);\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <UserTableToolbar\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          onUserAdd={(e) => \r\n            dispatch({type: SET_USER_DIALOG, payload: e})\r\n        }\r\n          filterOptions={filterOptions}\r\n          setFilterOptions={setFilterOptions}\r\n          searchTerm={searchTerm}\r\n          setSearchTerm={setSearchTerm}\r\n          project={project}\r\n          handleSearch={handleSearchTerm}\r\n        />\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader className={classes.table} aria-labelledby=\"tableTitle\" aria-label=\"sticky enhanced table\">\r\n            <UserTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={users.length}\r\n            />\r\n            <TableBody>\r\n              {!!orders.length ? (\r\n                stableSort(orders, getComparator(order, orderBy))\r\n                  .map((row, index) => (\r\n                    <UserListRow\r\n                      key={index}\r\n                      row={row}\r\n                      onRowClick={handleRowClick}\r\n                      onUserEdit={handleUserEdit}\r\n                      onUserDelete={handleUserDelete}\r\n                      onUserView={handleUserView}\r\n                      isSelected={isSelected}\r\n                    />\r\n                  ))\r\n              ) : (\r\n                <TableRow style={{ height: 53 * 6 }}>\r\n                  <TableCell colSpan={7} rowSpan={10}>\r\n                    {isFilterApplied ? (\r\n                      <NoRecordFound>There are no records found with your filter.</NoRecordFound>\r\n                    ) : (\r\n                      <NoRecordFound>{usersFetched ? 'There are no records found.' : 'Loading users...'}</NoRecordFound>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50]}\r\n          component=\"div\"\r\n          count={count}\r\n          rowsPerPage={rowsPerPage}\r\n          page={filterType.page}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleRowsPerPageChange}\r\n        />\r\n      </Paper>\r\n\r\n      {openViewDialog && <UserDetailView currentUser={currentUser} open={openViewDialog} onCloseDialog={handleCloseViewDialog} />}\r\n\r\n      <ConfirmDialog\r\n        open={openConfirmDialog}\r\n        title={`Confirm delete ${selectedUser.name}`}\r\n        content={'Are you sure, you want to  delete this user?'}\r\n        onClose={handleCancelDelete}\r\n        onConfirm={handleConfirmDelete}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersModule;\r\n ","import React, { useState, useEffect } from 'react';\r\nimport CmtBackDrop from '../../../../@coremat/CmtBackDrop';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport Box from '@material-ui/core/Box';\r\nimport { classicWidget } from '../../../../@fake-db';\r\nimport AppDatePicker from '../../../../@jumbo/components/Common/formElements/AppDatePicker';\r\nimport ProjectWorkedGraph from './ProjectWorkedGraph';\r\nimport AppSelectBox from '../../../../@jumbo/components/Common/formElements/AppSelectBox';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { getFormattedDate } from '../../../../@jumbo/utils/dateHelper';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\n//Components\r\nimport Table from '../Table';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getOrders } from 'redux/actions/OrderApp';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingRight: 16,\r\n    paddingLeft: 16,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 13,\r\n      paddingLeft: 8,\r\n      paddingRight: 8,\r\n    },\r\n    color: alpha(theme.palette.common.white, 0.74),\r\n    '&:not(:first-child)': {\r\n      borderLeft: `1px solid ${alpha(theme.palette.common.white, 0.8)}`,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      marginRight: 12,\r\n    },\r\n  },\r\n  backdropContent: {\r\n    color: alpha(theme.palette.common.white, 0.74),\r\n    '& .form-control': {\r\n      marginBottom: 20,\r\n      '& label, & .MuiInput-formControl, & .MuiSelect-icon, & .MuiIconButton-root': {\r\n        color: alpha(theme.palette.common.white, 0.74),\r\n      },\r\n      '& .MuiInput-underline:before, & .MuiInput-underline:after': {\r\n        borderBottomColor: alpha(theme.palette.common.white, 0.74),\r\n      },\r\n    },\r\n  },\r\n  subHeaderBottom: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst breadcrumbs = [\r\n  { label: 'Dashboard', link: '/' },\r\n  { label: 'Reports', link: '/reports' },\r\n];\r\n\r\n\r\nconst ProjectSwitcher = ({ currentProject, setCurrentProject, startDate, setStartDate, endDate, setEndDate }) => {\r\n  \r\n  \r\n  const handleProjectChange = event => {\r\n    console.log(event.target.value)\r\n    console.log(classicWidget.projects.find(project => project.value === event.target.value))\r\n\r\n    setCurrentProject(classicWidget.projects.find(project => project.value === event.target.value));\r\n  };\r\n\r\n  const onStartDateChange = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const onEndDateChange = date => {\r\n    setEndDate(date);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  \r\nconsole.log(currentProject.value)\r\n  console.log(currentProject)\r\n  console.log(classicWidget)\r\n  return (\r\n  \r\n    <CmtCardContent>\r\n      <Box className={classes.backdropContent}>\r\n        <AppSelectBox\r\n          label=\"Select Report Table\"\r\n          data={classicWidget.projects}\r\n          valueKey=\"value\"\r\n          labelKey=\"label\"\r\n          value={currentProject.value}\r\n          onChange={handleProjectChange}\r\n          // disabled={true}\r\n        />\r\n        <AppDatePicker label=\"Start Date\" value={startDate} onChange={onStartDateChange} />\r\n        <AppDatePicker label=\"End Date\" value={endDate} onChange={onEndDateChange} />\r\n      </Box>\r\n    </CmtCardContent>\r\n   \r\n  );\r\n};\r\n\r\nconst ProjectHeader = ({ revealed, startDate, endDate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\r\n      <Box className={classes.headerItem}>Reports</Box>\r\n      <Box className={classes.headerItem}>\r\n        <CalendarTodayIcon />\r\n        {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ProjectWorkedHours = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [currentProject, setCurrentProject] = React.useState(classicWidget.projects[1]);\r\n  const [startDate, setStartDate] = React.useState('2020-07-03');\r\n  const [endDate, setEndDate] = React.useState('2020-08-20');\r\n  const [revealed, setRevealed] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const handleOnRevealed = status => {\r\n    setRevealed(status);\r\n  };\r\n\r\n  const handleProject = (e) => {\r\n    setCurrentProject(e)\r\n  }\r\n\r\n\r\n  const resetWidget = () => {\r\n    setCurrentProject(classicWidget.projects[0]);\r\n  };  \r\n\r\n  const handleReset = () => {\r\n    dispatch(getOrders({\r\n      page: 0,\r\n      rowsPerPage: 10\r\n    }))\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <PageContainer heading=\"Sales Report\" breadcrumbs={breadcrumbs}>\r\n    <GridContainer>\r\n      <Grid item xs={12} sm={12} md={12} lg={12}>\r\n    <CmtBackDrop\r\n      concealedIcon={<DeveloperBoardIcon />}\r\n      extrasContainer={<RefreshIcon className=\"pointer\" \r\n      onClick={handleReset} />}\r\n      backLayerConcealed={<ProjectHeader revealed currentProject={currentProject} startDate={startDate} endDate={endDate} />\r\n      }\r\n      backLayerRevealed={\r\n        <ProjectSwitcher\r\n          currentProject={currentProject}\r\n          setCurrentProject={handleProject}\r\n          startDate={startDate}\r\n          setStartDate={setStartDate}\r\n          endDate={endDate}\r\n          setEndDate={setEndDate}\r\n        />\r\n      }\r\n      onRevealed={handleOnRevealed}\r\n      >\r\n      <Box p={6}>\r\n        <Box>\r\n\r\n        <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\r\n            {currentProject.label}\r\n          </Typography>\r\n      </Box>\r\n        <Box className={classes.subHeaderBottom}>\r\n          <Box>\r\n            {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}\r\n          </Box>\r\n\r\n          <Box component=\"span\" fontSize={14} color=\"primary.main\">\r\n            \r\n          </Box>\r\n        </Box> \r\n      </Box>\r\n      <Box width=\"100%\">\r\n      <Table\r\n        project={currentProject}\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n      />\r\n      </Box>\r\n      {/* <ProjectWorkedGraph\r\n        data={currentProject.data}\r\n        color={currentProject.color}\r\n        backgroundColor={currentProject.backgroundColor}\r\n      /> */}\r\n    </CmtBackDrop>\r\n    </Grid>\r\n    </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectWorkedHours;\r\n"],"sourceRoot":""}